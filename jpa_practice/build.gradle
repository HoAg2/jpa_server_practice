buildscript {
    ext {
        profile = (!project.hasProperty('profile') || !profile) ? 'local' : profile
        querydslPluginVersion = '1.0.10'
        lombokVersion = '1.18.30'
        springBootVersion = '3.2.3'
        dependencyManagementVersion = '1.0.15.RELEASE'
        queryDslVersion = "5.0.0:jakarta"
        jakartaAnnotationVersion = "2.1.1"
        jakartaPersistenceVersion = "3.1.0"
        mariaDBClientVersion =  "3.3.2"
        mysqlClientVersion =  "8.0.33"
        jasyptVersion = "3.0.5"
        hibernate5Version = "2.16.1"
        springdocOpenUIVersion = "1.7.0"
        springDocOpenApiStarterWebMvcUIVersion = "2.3.0"
        jsonWebTokenVersion = "0.9.1"
        jaxbApiVersion = "2.3.0"
    }
}

plugins {
    id 'org.springframework.boot' version "${springBootVersion}"
    id 'java'
}
group = 'com.example'
version = '0.0.1'
description = 'jpa_practice'
sourceCompatibility = '17'

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}
dependencies {

    implementation "org.springframework.boot:spring-boot-starter-actuator:${springBootVersion}"
    implementation "org.springframework.boot:spring-boot-starter-test:${springBootVersion}"
    implementation "org.springframework.boot:spring-boot-starter-oauth2-client:${springBootVersion}"
    implementation "org.springframework.boot:spring-boot-starter-security:${springBootVersion}"
    implementation "org.springframework.boot:spring-boot-starter-web:${springBootVersion}"
    implementation "org.springframework.boot:spring-boot-starter-validation:${springBootVersion}"

    // DB
    implementation "com.fasterxml.jackson.datatype:jackson-datatype-hibernate5:${hibernate5Version}"
    runtimeOnly "mysql:mysql-connector-java:${mysqlClientVersion}"
    implementation 'com.github.gavlyukovskiy:p6spy-spring-boot-starter:1.5.6'

    // Redis
    implementation 'org.springframework.boot:spring-boot-starter-data-redis:3.2.4'
    implementation group: 'org.springframework.data', name: 'spring-data-redis', version: '3.2.5'
    implementation 'io.lettuce:lettuce-core:6.3.2.RELEASE'
    // https://mvnrepository.com/artifact/com.fasterxml.jackson.datatype/jackson-datatype-jsr310
    implementation group: 'com.fasterxml.jackson.datatype', name: 'jackson-datatype-jsr310', version: '2.17.1'

    // s3
    implementation group: 'org.springframework.cloud', name: 'spring-cloud-starter-aws', version: '2.2.6.RELEASE'
    implementation group: 'org.springframework.cloud', name: 'spring-cloud-aws', version: '2.2.6.RELEASE'

    // https://mvnrepository.com/artifact/com.fasterxml.jackson.datatype/jackson-datatype-jsr310
    implementation group: 'com.fasterxml.jackson.datatype', name: 'jackson-datatype-jsr310', version: '2.17.1'

    // Model Mapper
    implementation 'org.modelmapper:modelmapper:3.2.0'

    // logging
    implementation group: 'com.google.cloud', name: 'google-cloud-logging-logback', version: '0.130.28-alpha'
    implementation group: 'net.logstash.logback', name: 'logstash-logback-encoder', version: '6.6'
    implementation group: 'ch.qos.logback', name: 'logback-classic', version: '1.4.12'
    implementation group: 'ch.qos.logback', name: 'logback-core', version: '1.4.14'

    // Swagger Springdoc
    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.3.0'

    // JWT
    implementation "io.jsonwebtoken:jjwt:${jsonWebTokenVersion}"
    implementation "javax.xml.bind:jaxb-api:${jaxbApiVersion}"

    //querydsl 추가
    implementation "com.querydsl:querydsl-jpa:${queryDslVersion}"
    annotationProcessor "com.querydsl:querydsl-apt:${queryDslVersion}"
    annotationProcessor "jakarta.annotation:jakarta.annotation-api:${jakartaAnnotationVersion}"
    annotationProcessor "jakarta.persistence:jakarta.persistence-api:${jakartaPersistenceVersion}"

    // MIME Type 매칭
    implementation 'com.j256.simplemagic:simplemagic:1.17'

    // yaml profile 조작
    implementation group: 'dev.akkinoc.util', name: 'yaml-resource-bundle', version: '2.9.1'

    // jasypt
    implementation "com.github.ulisesbocchio:jasypt-spring-boot:${jasyptVersion}"

    // lombok
    implementation "org.projectlombok:lombok:${lombokVersion}"
    compileOnly "org.projectlombok:lombok:${lombokVersion}"
    annotationProcessor "org.projectlombok:lombok:${lombokVersion}"
    testAnnotationProcessor "org.projectlombok:lombok:${lombokVersion}"

    // SSE
    implementation 'io.projectreactor:reactor-core:3.4.11'

    //JNA
    implementation group: 'net.java.dev.jna', name: 'jna', version: '5.14.0'
    implementation group: 'net.java.dev.jna', name: 'jna-platform', version: '5.14.0'

    //Chrome control
    implementation group: 'org.seleniumhq.selenium', name: 'selenium-java', version: '4.22.0'

    configurations.all {
        exclude group: 'commons-logging', module: 'commons-logging'
    }
}

sourceSets {
    main {
        java {
            srcDirs "src/main/java"
        }
        resources {
            srcDirs "src/main/resources"
        }
    }
}

clean {
    delete file("$projectDir/src/main/generated")
}

configurations {
    querydsl.extendsFrom compileClasspath
}

//compileJava.doFirst {
//	if(file(querydslDir).exists())
//		delete(file(querydslDir))
//}

tasks.withType(JavaCompile) {
    options.warnings = false
}

processResources {
    duplicatesStrategy = DuplicatesStrategy.EXCLUDE
}

jar {
    enabled = false
}

bootJar {
    archiveBaseName.set("kiosk-api")
    enabled = true
    launchScript()
}